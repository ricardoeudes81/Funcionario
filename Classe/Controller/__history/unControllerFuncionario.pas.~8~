unit unControllerFuncionario;

interface

uses
  Funcionario, unDAOFuncionario;

type

  TControllerFuncionario = class
  public
    function Salvar(Entidade: TFuncionario): Boolean;
    function Remover(Entidade: TFuncionario): Boolean;
  end;

implementation

{ TControllerFuncionario }

function TControllerFuncionario.Remover(Entidade: TFuncionario): Boolean;
var
  lResultado: Boolean;
begin
  lResultado := False;
  try
    if not Assigned(Entidade) then
      Exit;

    TDAOFuncionario.Delete(Entidade);
    lResultado := True;
  finally
    Result := lResultado;
  end;
end;

function TControllerFuncionario.Salvar(Entidade: TFuncionario): Boolean;
var
  lResultado: Boolean;
begin
  lResultado := False;
  try
    if Entidade.Id = 0 then
       TDAOFuncionario.Insert(Entidade)
    else
      TDAOFuncionario.Update(Entidade);
    lResultado := True;
  finally
    Result := lResultado;
  end;
end;

end.
